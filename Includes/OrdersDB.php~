class OrdersDB extends mysqli {
// single instance of self shared among all instances
    private static $instance = null;
    // db connection config vars
    private $user = "phpuser";
    private $pass = "phpuserpw";
    private $dbName = "ics";
    private $dbHost = "localhost";
    private $con = null;
 
  // The clone and wakeup methods prevents external instantiation of copies of the Singleton class,
    // thus eliminating the possibility of duplicate objects.
    public function __clone() {
        trigger_error('Clone is not allowed.', E_USER_ERROR);
    }

    public function __wakeup() {
        trigger_error('Deserializing is not allowed.', E_USER_ERROR);
    }
    // private constructor
    private function __construct() {
        parent::__construct($this->dbHost, $this->user, $this->pass, $this->dbName);
        if (mysqli_connect_error()) {
            exit('Connect Error (' . mysqli_connect_errno() . ') '
                    . mysqli_connect_error());
        }
        parent::set_charset('utf-8');
    }
    
    /**** new order functions */
     public function insert_orders($customerID, $onumber,$odate, $custID,$CustOrderNo,$CustOrderDt,$oSubT,$oTax,oShipChg,oTot) {
        $product = $this->real_escape_string($product);
        $this->query("INSERT INTO orders
            (customerID,
            onumber,
            odate,
            custID,
            CustOrderNo,
            CustOrderDt,
            oSubT,
            oTax,
            oShipChg,
            oTot) VALUES (
            " . $customerID . ",
            '" . $onumber . "',
            '" . $odate . "',
            '" . $custID . "',
            '" . $CustOrderNo . "',
            '" . $CustOrderDt . "',
            '" . $oSubT . "',
            '" . $oTax . "',
            '" . $oShipChg ."',
            '" . $oTot ."' )");
    }        
            
     public function update_orders($customerID, $onumber,$odate,$custID,$CustOrderNo,$CustOrderDt,$oSubT,$oTax,$oShipChg,$oTot) {
        $product = $this->real_escape_string($product);
        $this->query("UPDATE orders SET
                customerID  = '" . $customerID . "',
                onumber     = '" . $onumber ."',
                odate       = '" . $odate . "',
                custID      = '" . $cust ."',
                CustOrderNo = '" . $CustOrderNo . "',
                CustOrderDt = '" . $CustOrderDt . "',
                oSubT       = '" . $oSubT . "',
                oTax        = '" . $oTax . "',
                oShipChg    = '" . $oShipChg . "',
                oTo         = '" . $oTot . "');
    }
    
    public function get_order_by_customer_id($customerID)) {
        $result = $this->query("SELECT ALL FROM orders WHERE customerid = $customerID");
        if ($result->num_rows > 0) {
            $row = $result->fetch_row();
            return $result;
        } else
            return null;
    }

                    
/**** new order detail functions */
     public function insert_orders_detail($orderID, $inventoryID,$itemNo, $itemPrice,$itemDisc,$itemTot) {
        $product = $this->real_escape_string($product);
        $this->query("INSERT INTO orders
            (orderid,
            ,inventoryid
            itemNo,
            itemPrice,
            itemDisc,
            itemTot) VALUES (
            " . $orderid . ",
            '" . $inventory . "',
            '" . $itemNo . "',
            '" . $itemPrice . "',
            '" . $itemDisc . "',
            '" . $itemTot . "')");
    }        
            
     public function update_orders($orderID, $inventoryID,$itemNo, $itemPrice,$itemDisc,$itemTot) {
        $product = $this->real_escape_string($product);
        $this->query("UPDATE orders SET
            (orderid,
            inventoryid,
            itemNo,
            itemPrice,
            itemDisc,
            itemTot) VALUES (
            " . $orderid . ",
            '" . $inventory . "',
            '" . $itemNo . "',
            '" . $itemPrice . "',
            '" . $itemDisc . "',
            '" . $itemTot . "')");
    }        
	      
    
}